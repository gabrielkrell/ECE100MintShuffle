/** File: lfollow_motors.ic
	Purpose: Subroutines for motor control.
	Parameters: See config.ic
	Author: Gabriel Krell
	Initial commit date: 9/30
**/

void forwardFor(float seconds) {
	forward();
	sleep(seconds);
	stop();
}
void forward() {
	fdL();
	fdR();
}
void backward() {
	bkL();
	bkR();
}

/*left turn is full power instead of respecting motor speed
  to avoid rolling over the line too fast when running followLine(). */
void left() {
	fd(MOTOR_R);
	bk(MOTOR_L);
	//    fdR();
	//    if (BACKUP_MODE) {
	//        bkL();
	//    } else {
	//        off(MOTOR_L);
	//    }
}
void right() {
	fdL();
	if (BACKUP_MODE) {
		bkR();
	} else {
		off(MOTOR_R);
	}
}
void fdR() {
	motor(MOTOR_R,MOTOR_R_SPEED);
}
void fdL() {
	motor(MOTOR_L,MOTOR_L_SPEED);
}
void bkL() {
	motor(MOTOR_L,-1*MOTOR_L_SPEED);
}
void bkR() {
	motor(MOTOR_R,-1*MOTOR_R_SPEED);
}
void stop() {
	off(MOTOR_L);
	off(MOTOR_R);
}

void adj_motor() {
	while (1) { 
		MOTOR_L_SPEED = norm_knob();
		MOTOR_R_SPEED = norm_knob();
		//printf("%d\n",norm_knob());
		defer();
	}
}
